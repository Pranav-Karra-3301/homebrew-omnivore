name: Update Formula

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Omnivore version (e.g., 0.1.0)'
        required: true
        type: string
  repository_dispatch:
    types: [omnivore-release]

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          fi
      
      - name: Download and calculate SHA256
        id: sha256
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          
          # Download and calculate SHA256 for each platform
          declare -A PLATFORMS=(
            ["darwin-arm64"]="aarch64-apple-darwin"
            ["darwin-x86_64"]="x86_64-apple-darwin"
            ["linux-arm64"]="aarch64-unknown-linux-gnu"
            ["linux-x86_64"]="x86_64-unknown-linux-gnu"
          )
          
          for platform in "${!PLATFORMS[@]}"; do
            URL="https://github.com/Pranav-Karra-3301/omnivore/releases/download/v${VERSION}/omnivore-v${VERSION}-${PLATFORMS[$platform]}.tar.gz"
            
            # Download the file
            if curl -L -o "/tmp/omnivore-${platform}.tar.gz" "$URL"; then
              SHA256=$(sha256sum "/tmp/omnivore-${platform}.tar.gz" | cut -d' ' -f1)
              echo "${platform}_SHA256=${SHA256}" >> $GITHUB_OUTPUT
            else
              echo "::warning::Failed to download ${platform} binary"
            fi
          done
      
      - name: Update formula
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          
          # Update version
          sed -i "s/version \".*\"/version \"${VERSION}\"/" omnivore.rb
          
          # Update SHA256 hashes
          if [ -n "${{ steps.sha256.outputs.darwin-arm64_SHA256 }}" ]; then
            sed -i "s/sha256 \"REPLACE_WITH_ARM64_MAC_SHA256\"/sha256 \"${{ steps.sha256.outputs.darwin-arm64_SHA256 }}\"/" omnivore.rb
          fi
          
          if [ -n "${{ steps.sha256.outputs.darwin-x86_64_SHA256 }}" ]; then
            sed -i "s/sha256 \"REPLACE_WITH_X86_64_MAC_SHA256\"/sha256 \"${{ steps.sha256.outputs.darwin-x86_64_SHA256 }}\"/" omnivore.rb
          fi
          
          if [ -n "${{ steps.sha256.outputs.linux-arm64_SHA256 }}" ]; then
            sed -i "s/sha256 \"REPLACE_WITH_ARM64_LINUX_SHA256\"/sha256 \"${{ steps.sha256.outputs.linux-arm64_SHA256 }}\"/" omnivore.rb
          fi
          
          if [ -n "${{ steps.sha256.outputs.linux-x86_64_SHA256 }}" ]; then
            sed -i "s/sha256 \"REPLACE_WITH_X86_64_LINUX_SHA256\"/sha256 \"${{ steps.sha256.outputs.linux-x86_64_SHA256 }}\"/" omnivore.rb
          fi
      
      - name: Test formula
        run: |
          # Basic syntax check
          ruby -c omnivore.rb
      
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Omnivore to v${{ steps.version.outputs.VERSION }}"
          title: "Update Omnivore to v${{ steps.version.outputs.VERSION }}"
          body: |
            Updates the Omnivore formula to version ${{ steps.version.outputs.VERSION }}.
            
            ## Changes
            - Updated version to ${{ steps.version.outputs.VERSION }}
            - Updated SHA256 hashes for all platforms
            
            ## Checksums
            - Darwin ARM64: `${{ steps.sha256.outputs.darwin-arm64_SHA256 }}`
            - Darwin x86_64: `${{ steps.sha256.outputs.darwin-x86_64_SHA256 }}`
            - Linux ARM64: `${{ steps.sha256.outputs.linux-arm64_SHA256 }}`
            - Linux x86_64: `${{ steps.sha256.outputs.linux-x86_64_SHA256 }}`
            
            This PR was automatically generated by the update-formula workflow.
          branch: update-omnivore-${{ steps.version.outputs.VERSION }}
          delete-branch: true